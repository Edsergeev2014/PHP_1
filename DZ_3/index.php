<head>
<style>
/*<link rel='stylesheet' href='style.css' />*/
h3 {
    color: mediumseagreen;
}
/*--- НАВИГАЦИЯ МЕНЮ ---*/
#nav{
	float:left;
	width:100%;
	list-style:none;
	font-weight:500;
	margin-bottom:10px;
}
#nav li{
	float:left;
	margin-right:10px;
	position:relative;
	display:block;
}
#nav li a{
	display:block;
    padding: 0.75em;
	color:#74924C;
	background:rgba(186, 215, 139, .3);
	text-decoration:none;
	
	/* text-shadow:1px 1px 1px rgba(0,0,0,0.75); Тень текста, чтобы приподнять его на немного */
	-moz-border-radius:2px;
	-webkit-border-radius:2px;
	border-radius:2px;
}
#nav li a:hover{
	color:#74924C;
	background:#6b0c36;
	background:rgba(107,12,54,0.75); /* Выглядит полупрозрачным */
	/* text-decoration:underline; */
}
/*--- ВЫПАДАЮЩИЕ ПУНКТЫ ---*/
#nav ul{
	list-style:none;
	position:absolute;
    padding: 0.25em 0;
	left:-9999px; /* Скрываем за экраном, когда не нужно (данный метод лучше, чем display:none;) */
	opacity:0; /* Устанавливаем начальное состояние прозрачности */
	-webkit-transition:0.15s linear opacity; /* В Webkit выпадающие пункты будут проявляться */
}
#nav ul li{
	padding-top:1px; /* Вводим отступ между li чтобы создать иллюзию разделенных пунктов меню */
	float:none;
}
#nav ul a{
	white-space:nowrap; /* Останавливаем перенос текста и создаем многострочный выпадающий пункт */
	display:block;
}
#nav li:hover ul{ /* Выводим выпадающий пункт при наведении курсора */
	left:0; /* Приносим его обратно на экран, когда нужно */
	opacity:1; /* Делаем непрозрачным */
    cursor:pointer;
}
#nav li:hover a{ /* Устанавливаем стили для верхнего уровня, когда выводится выпадающий список */
	background:#6b0c36;
	background:rgba(186, 215, 139, .3); /* Выглядит полупрозрачным */
	/* text-decoration:underline; */
    cursor:pointer;
}
#nav li:hover ul a{ /* Изменяем некоторые стили верхнего уровня при выводе выпадающего пункта */
	text-decoration:none;
	-webkit-transition:-webkit-transform 0.095s linear;
    cursor:pointer;
}
#nav li:hover ul li a:hover{ /* Устанавливаем стили для выпадающих пунктов, когда курсор наводится на конкретный пункт */
	background:#333;
	background:rgba(186, 215, 139, .75); /* Будет полупрозрачным */
	text-decoration:underline;
	-moz-transform:scale(1.02);
	-webkit-transform:scale(1.02);
    cursor:pointer;
}
nav {
    display: block;
    width: 750px;
    margin: 0 auto 30px;
}
section {
  display: block;
  width: 500px;
  min-height: 200px;
  margin: 0 auto 30px;
}
</style>
</head>

<?php
// Урок 3. Циклы и массивы
// п.1. С помощью цикла while вывести все числа в промежутке от 0 до 100, 
// которые делятся на 3 без остатка.
echo "<h3> Задание п.1. Числа, которые деляться на 3: </h3>";
$numbers = 0;
while ($numbers <= 100) {
    if ($numbers % 3 == 0) echo $numbers. ", ";
    $numbers++;
}

// п.2. С помощью цикла do…while написать функцию для вывода чисел от 0 до 10, 
// чтобы результат выглядел так: 0 – это ноль. 1 – нечетное число. 2 – четное число.
// 3 – нечетное число. … 10 – четное число.
echo "<h3> Задание п.2. Чётные и нечётные числа: </h3>";
$numbers = 0;
do {
    if ($numbers == 0) echo $numbers. " – это ноль; ";
    elseif ($numbers % 2 == 0) echo $numbers. " – четное число; ";
    else echo $numbers. " – нечетное число; ";
    $numbers++;
} while ($numbers < 10);

// п.3. Объявить массив, в котором в качестве ключей будут использоваться названия областей, 
// а в качестве значений – массивы с названиями городов из соответствующей области. 
// Вывести в цикле значения массива
echo "<h3> Задание п.3. Массив: Ключи и значения: Области и города</h3>";
// Массив Регионов: Область и города
$Regions ["Московская область"] = array ("Апрелевка", "Балашиха", "Бронницы", "Верея", "Видное", "Волоколамск", "Воскресенск", "Высоковск", "Голицыно", "Дедовск", "Дзержинский", "Дмитров", "Долгопрудный", "Домодедово", "Дрезна", "Кашира", "Клин", "Коломна", "Королёв", "Котельники", "Красноармейск", "Красногорск", "Краснозаводск", "Краснознаменск", "Кубинка", "Куровское", "Лобня", "Луховицы", "Шатура", "Щёлково", "Электрогорск", "Электросталь", "Электроугли", "Яхрома");
$Regions ["Ленинградская область"] = array ("Бокситогорск", "Волосово", "Волхов", "Всеволожск", "Выборг", "Высоцк", "Гатчина", "Ивангород", "Каменногорск", "Кингисепп", "Кириши", "Кировск", "Коммунар", "Лодейное Поле", "Луга", "Любань", "Никольское", "Новая Ладога", "Отрадное", "Пикалёво", "Подпорожье", "Приморск", "Приозерск", "Светогорск", "Сертолово", "Сланцы", "Сосновый Бор", "Сясьстрой", "Тихвин", "Тосно", "Шлиссельбург"); 

// Справочно: Проверка заполнения Массива и тестирование индексов и значений
//echo "Массив <b>Regions:</b><br/>"; var_dump($Regions); echo "<br/>"; echo "<b>Кол-во городов в регионе:</b> ". count($Regions["Московская область"]);

// Присвоение переменным значений Массива Регионов: областей и городов
$oblast = array_keys($Regions); // echo "<br/><b>Массив областей в переменной: </b>"; var_dump($oblast);

// Цикл вывода областей и городов
foreach ($oblast as $key) {
    echo "<br/><b>". $key. ":</b><br/> ";
    foreach ($Regions[$key] as $value) {
        echo "$value, ";
    }
}

// п. 4. Объявить массив, индексами которого являются буквы русского языка, 
// а значениями – соответствующие латинские буквосочетания
echo "<h3> Задание п.4. Транслитерация строк:</h3>";

function to_translite($string) {
    $letters = [
    "А"	=> "A", "Б"	=> "B", "В"	=> "V", "Г"	=> "G", "Д"	=> "D", "Е"	=> "E", "Ё"	=> "E", "Ж"	=> "Zh",
    "З"	=> "Z", "И"	=> "I", "Й"	=> "I", "К"	=> "K", "Л"	=> "L", "М"	=> "M", "Н"	=> "N", "О"	=> "O",
    "П"	=> "P", "Р"	=> "R", "С"	=> "S", "Т"	=> "T", "У"	=> "U", "Ф"	=> "F", "Х"	=> "Kh", "Ц"	=> "Ts",
    "Ч"	=> "Ch", "Ш" => "SH", "Щ"	=> "SHCH", "Ъ"	=> "IE", "Ы"	=> "Y", "Ь"	=> "", "Э"	=> "E", "Ю"	=> "IU",
    "Я"	=> "IA", 
    "а"	=> "a", "б"	=> "b", "в"	=> "v", "г"	=> "g", "д"	=> "d", "е"	=> "e", "ё"	=> "e", "ж"	=> "zh", "з" => "z",
    "и"	=> "i", "й"	=> "i", "к"	=> "k", "л"	=> "l", "м"	=> "m", "н"	=> "n", "о"	=> "o", "п"	=> "p",
    "р"	=> "r", "с"	=> "s", "т"	=> "t", "у"	=> "u", "ф"	=> "f", "х"	=> "kh", "ц" => "ts", "ч"	=> "ch",
    "ш"	=> "sH", "щ"	=> "shch", "ъ"	=> "ie", "ы"	=> "y", "ь"	=> "", "э"	=> "e", "ю"	=> "iu", "я" => "ia",
    ];
    return strtr($string, $letters);
}

$text = "Это исходное предложение для транслитерации.";
echo "<b>Текст: </b><br/>". $text;
echo "<br/><b>Перевод: </b><br/>". to_translite($text);

//п.5. Написать функцию, которая заменяет в строке пробелы на подчеркивания 
// и возвращает видоизмененную строчку.
echo "<h3> Задание п.5. Заменяем в строке пробелы на подчеркивание:</h3>";
function space_to_underline($string) {
    $letters = [" "	=> "_"];
    return strtr($string, $letters);
}
    
$text = "В этом тексте нужно заменить пробелы на подчеркивание.";
echo "<b>Текст: </b><br/>". $text;
echo "<br/><b>Результат: </b><br/>". space_to_underline($text);

// п. 6. В имеющемся шаблоне сайта заменить статичное меню (ul - li) на генерируемое через PHP. 
// Необходимо представить пункты меню как элементы массива и вывести их циклом. 
// Подумать, как можно реализовать меню с вложенными подменю? Попробовать его реализовать.
echo "<h3> Задание п.6. Сгенерировать Меню ul-li через PHP:</h3>";

// Формируем массив Меню
echo "<br/>";
$Мenu ["Женская одежда"] = array ("Платья", "Блузы", "Туники", "Костюмы", "Домашняя одежда");
$Мenu ["Мужская одежда"] = array ("Джемперы", "Костюмы", "Брюки");
$Мenu ["Детская одежда"] = array ("Кофточки", "Костюмы", "Нижнее белье");
$Мenu ["Постельное белье"] = array ("Сатин", "Поплин", "Бязь");
$Мenu ["Полотенца"] = array ("Семейные", "Банные", "Столовые");

// Формируем массив Меню
$Main_row = array_keys($Мenu);

// Выводим Меню на экран
echo "<nav>";
echo "<ul id='nav'>";
foreach ($Main_row as $key) {
    echo "<li><a>". $key. "</a>";
    echo "<ul>";
    foreach ($Мenu[$key] as $value) {
       echo "<li><a>". $value. "</a></li> ";
    }
    echo "</ul>";
    echo "</li>";
}
echo "</ul>";
echo "</nav>";
echo "<section></section>";
echo "<br/>";

// п.7. *Вывести с помощью цикла for числа от 0 до 9, НЕ используя тело цикла.
echo "<h3> Задание п.7. Вывести с помощью цикла for числа от 0 до 9:</h3>";
for ($x=0, print "Выводим значения из цикла: "; $x<10; print $x++.", "); //echo $x;

// п.8. *Повторить третье задание, но вывести на экран только города, начинающиеся с буквы «К».
echo "<h3> Задание п.8. Выводим на экран только города, начинающиеся с буквы «К»:</h3>";
// Цикл вывода областей и городов
foreach ($oblast as $key) {
    echo "<br/><b>". $key. ":</b><br/> ";
    foreach ($Regions[$key] as $value) {
        if (substr($value, 0, 2) == "К") echo "$value, ";
    }
}

// п.9. *Объединить две ранее написанные функции в одну, которая получает строку на русском языке, 
// производит транслитерацию и замену пробелов на подчеркивания 
// (аналогичная задача решается при конструировании url-адресов на основе названия статьи в блогах).
echo "<h3> Задание п.9. Произвести транслитерацию текста и замену пробелов на подчеркивания:</h3>";
$text = "https://www.это название сайта на русском языке.ru";
echo "<b>Переводим URL-адрес с русского на латиницу:</b><br/>". $text;
echo "<br/><b>Перевод: </b><br/>". to_translite(space_to_underline($text));

?>